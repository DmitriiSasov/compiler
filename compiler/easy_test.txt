open class A{
    
    private var v1:Int = 5
    
    var v2:String = "Hello"
    
    constructor()
    
    public fun getV1():Int{
        return v1;
    }
    
    public fun addValueToV1():Int {
        var res1: Int = v1 + value
        if (res1 == addValue(v1))
            return res1
        else
            return addValue(v1)
	return 5
    }
    
    public open fun calcFieldSum():String {
        return v2+v1
    }
    
}

class B:A{

    constructor()
    
    public var v3: Double = 3254235.2;
    
    override fun calcFieldSum():String{
        var res:String = super.calcFieldSum() + super.v2
        super.v2 = "sdad"
        return v2 + v3;
    }
    
    fun calcFieldSub():Double{
        return v3 - super.getV1();
    }
}

public var value:Int = 5;

fun addValue(v1:Int):Int{
    var res:Double = (v1 + value).toDouble()
    return res.toInt();
}

fun main():Unit {
    
    val a :Int = 5;
    var arr: Array<Any> = arrayOf(1, 3, 4, 5)
    arr = arr + "Hello"
    arr = arr + B()
    var b :A = B()
    arr[3+1-5.243f.toInt() + "2".toInt()] = "Hello"[1];
    b.calcFieldSum();
    arr[1] = 'a'
    var index:Int = 0
    while(index < a){
        print(arr[index + 5 - 6 + 1])   
        index = index + 1
    }

    if (a == 5){
        var f:Int = 5
        print(a)
        if (a == 6) {
            var a:String = readLine()
        }
    }
    while (a == 6)
        print(a)
    
}